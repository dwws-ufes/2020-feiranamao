
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$sparql-devweb-primary: mat-palette($mat-indigo);
$sparql-devweb-accent: mat-palette($mat-pink, A200, A100, A400);

// The warn palette is optional (defaults to red).
$sparql-devweb-warn: mat-palette($mat-red);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$sparql-devweb-theme: mat-light-theme((
  color: (
    primary: $sparql-devweb-primary,
    accent: $sparql-devweb-accent,
    warn: $sparql-devweb-warn,
  )
));

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($sparql-devweb-theme);

/* You can add global styles to this file, and also import other style files */
:root {
  --primary-color: #467302;
  --primary-color-light: #83A603;
  --secondary-color: #A61103;
  --secondary-color-light: #D95204;

  --grey-100: #F3F4F6;
  --grey-900: #111827;
}


button {
  border: none;
}

html, body { height: 100%; }
body { margin: 0; font-family: "Mulish", "Helvetica Neue", sans-serif !important; }

// @import 'app/shared/styles/mat-dialog-container.scss';*/
